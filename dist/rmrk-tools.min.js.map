{"version":3,"file":"rmrk-tools.min.js","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@polkadot/extension-dapp/index.mjs","../src/rmrk1.0.0/classes/collection.ts","../src/rmrk1.0.0/classes/nft.ts","../node_modules/@polkadot/extension-dapp/util.mjs","../node_modules/tslib/tslib.es6.js","../src/rmrk1.0.0/classes/changeissuer.ts","../src/rmrk1.0.0/classes/send.ts","../src/rmrk1.0.0/classes/emote.ts","../src/tools/utils.ts","../src/tools/types.ts","../src/bundle.ts","../src/tools/consolidator/consolidator.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2019-2021 @polkadot/extension-dapp authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aEq } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nimport { documentReadyPromise } from \"./util.mjs\"; // just a helper (otherwise we cast all-over, so shorter and more readable)\n\nconst win = window; // don't clobber the existing object, but ensure non-undefined\n\nwin.injectedWeb3 = win.injectedWeb3 || {}; // true when anything has been injected and is available\n\nfunction web3IsInjected() {\n  return Object.keys(win.injectedWeb3).length !== 0;\n} // helper to throw a consistent error when not enabled\n\n\nfunction throwError(method) {\n  throw new Error(`${method}: web3Enable(originName) needs to be called before ${method}`);\n} // internal helper to map from Array<InjectedAccount> -> Array<InjectedAccountWithMeta>\n\n\nfunction mapAccounts(source, list, ss58Format) {\n  return list.map(({\n    address,\n    genesisHash,\n    name\n  }) => {\n    const encodedAddress = encodeAddress(decodeAddress(address), ss58Format);\n    return {\n      address: encodedAddress,\n      meta: {\n        genesisHash,\n        name,\n        source\n      }\n    };\n  });\n} // have we found a properly constructed window.injectedWeb3\n\n\nlet isWeb3Injected = web3IsInjected(); // we keep the last promise created around (for queries)\n\nlet web3EnablePromise = null;\nexport { isWeb3Injected, web3EnablePromise };\n\nfunction getWindowExtensions(originName) {\n  return Promise.all(Object.entries(win.injectedWeb3).map(([name, {\n    enable,\n    version\n  }]) => Promise.all([Promise.resolve({\n    name,\n    version\n  }), enable(originName).catch(error => {\n    console.error(`Error initializing ${name}: ${error.message}`);\n  })])));\n} // enables all the providers found on the injected window interface\n\n\nexport function web3Enable(originName) {\n  if (!originName) {\n    throw new Error('You must pass a name for your app to the web3Enable function');\n  }\n\n  web3EnablePromise = documentReadyPromise(() => getWindowExtensions(originName).then(values => values.filter(value => !!value[1]).map(([info, ext]) => {\n    // if we don't have an accounts subscriber, add a single-shot version\n    if (!ext.accounts.subscribe) {\n      ext.accounts.subscribe = cb => {\n        ext.accounts.get().then(cb).catch(console.error);\n        return () => {// no ubsubscribe needed, this is a single-shot\n        };\n      };\n    }\n\n    return _objectSpread(_objectSpread({}, info), ext);\n  })).catch(() => []).then(values => {\n    const names = values.map(({\n      name,\n      version\n    }) => `${name}/${version}`);\n    isWeb3Injected = web3IsInjected();\n    console.log(`web3Enable: Enabled ${values.length} extension${values.length !== 1 ? 's' : ''}: ${names.join(', ')}`);\n    return values;\n  }));\n  return web3EnablePromise;\n} // retrieve all the accounts accross all providers\n\nexport async function web3Accounts({\n  ss58Format\n} = {}) {\n  if (!web3EnablePromise) {\n    return throwError('web3Accounts');\n  }\n\n  const accounts = [];\n  const injected = await web3EnablePromise;\n  const retrieved = await Promise.all(injected.map(async ({\n    accounts,\n    name: source\n  }) => {\n    try {\n      const list = await accounts.get();\n      return mapAccounts(source, list, ss58Format);\n    } catch (error) {\n      // cannot handle this one\n      return [];\n    }\n  }));\n  retrieved.forEach(result => {\n    accounts.push(...result);\n  });\n  const addresses = accounts.map(({\n    address\n  }) => address);\n  console.log(`web3Accounts: Found ${accounts.length} address${accounts.length !== 1 ? 'es' : ''}: ${addresses.join(', ')}`);\n  return accounts;\n}\nexport async function web3AccountsSubscribe(cb, {\n  ss58Format\n} = {}) {\n  if (!web3EnablePromise) {\n    return throwError('web3AccountsSubscribe');\n  }\n\n  const accounts = {};\n\n  const triggerUpdate = () => cb(Object.entries(accounts).reduce((result, [source, list]) => {\n    result.push(...mapAccounts(source, list, ss58Format));\n    return result;\n  }, []));\n\n  const unsubs = (await web3EnablePromise).map(({\n    accounts: {\n      subscribe\n    },\n    name: source\n  }) => subscribe(result => {\n    accounts[source] = result; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n    triggerUpdate();\n  }));\n  return () => {\n    unsubs.forEach(unsub => {\n      unsub();\n    });\n  };\n} // find a specific provider based on the name\n\nexport async function web3FromSource(source) {\n  if (!web3EnablePromise) {\n    return throwError('web3FromSource');\n  }\n\n  const sources = await web3EnablePromise;\n  const found = source && sources.find(({\n    name\n  }) => name === source);\n\n  if (!found) {\n    throw new Error(`web3FromSource: Unable to find an injected ${source}`);\n  }\n\n  return found;\n} // find a specific provider based on an address\n\nexport async function web3FromAddress(address) {\n  if (!web3EnablePromise) {\n    return throwError('web3FromAddress');\n  }\n\n  const accounts = await web3Accounts();\n  let found;\n\n  if (address) {\n    const accountU8a = decodeAddress(address);\n    found = accounts.find(account => u8aEq(decodeAddress(account.address), accountU8a));\n  }\n\n  if (!found) {\n    throw new Error(`web3FromAddress: Unable to find injected ${address}`);\n  }\n\n  return web3FromSource(found.meta.source);\n} // retrieve all providers exposed by one source\n\nexport async function web3ListRpcProviders(source) {\n  const {\n    provider\n  } = await web3FromSource(source);\n\n  if (!provider) {\n    console.warn(`Extension ${source} does not expose any provider`);\n    return null;\n  }\n\n  return provider.listProviders();\n} // retrieve all providers exposed by one source\n\nexport async function web3UseRpcProvider(source, key) {\n  const {\n    provider\n  } = await web3FromSource(source);\n\n  if (!provider) {\n    throw new Error(`Extension ${source} does not expose any provider`);\n  }\n\n  const meta = await provider.startProvider(key);\n  return {\n    meta,\n    provider\n  };\n}","// @todo: add data!\nimport { Change } from \"../changelog\";\n\nexport class Collection {\n  readonly block: number;\n  readonly name: string;\n  readonly max: number;\n  issuer: string;\n  readonly symbol: string;\n  readonly id: string;\n  readonly metadata: string;\n  static V = \"RMRK1.0.0\";\n  private changes: Change[] = [];\n  loadedMetadata?: CollectionMetadata;\n\n  constructor(\n    block: number,\n    name: string,\n    max: number,\n    issuer: string,\n    symbol: string,\n    id: string,\n    metadata: string\n  ) {\n    this.block = block;\n    this.name = name;\n    this.max = max;\n    this.issuer = issuer;\n    this.symbol = symbol;\n    this.id = id;\n    this.metadata = metadata;\n  }\n\n  public mint(): string {\n    if (this.block) {\n      throw new Error(\"An already existing collection cannot be minted!\");\n    }\n    return `RMRK::MINT::${Collection.V}::${encodeURIComponent(\n      JSON.stringify({\n        name: this.name,\n        max: this.max,\n        issuer: this.issuer,\n        symbol: this.symbol.toUpperCase(),\n        id: this.id,\n        metadata: this.metadata,\n      })\n    )}`;\n  }\n\n  public change_issuer(address: string): string {\n    if (this.block === 0) {\n      throw new Error(\n        \"This collection is new, so there's no issuer to change.\" +\n          \" If it has been deployed on chain, load the existing \" +\n          \"collection as a new instance first, then change issuer.\"\n      );\n    }\n    return `RMRK::CHANGEISSUER::${Collection.V}::${this.id}::${address}`;\n  }\n\n  public addChange(c: Change): Collection {\n    this.changes.push(c);\n    return this;\n  }\n\n  public getChanges(): Change[] {\n    return this.changes;\n  }\n\n  static generateId(pubkey: string, symbol: string): string {\n    if (!pubkey.startsWith(\"0x\")) {\n      throw new Error(\"This is not a valid pubkey, it does not start with 0x\");\n    }\n    //console.log(pubkey);\n    return (\n      pubkey.substr(2, 10) +\n      pubkey.substring(pubkey.length - 8) +\n      \"-\" +\n      symbol.toUpperCase()\n    );\n  }\n\n  static fromRemark(remark: string, block?: number): Collection | string {\n    if (!block) {\n      block = 0;\n    }\n    const exploded = remark.split(\"::\");\n    try {\n      if (exploded[0].toUpperCase() != \"RMRK\")\n        throw new Error(\"Invalid remark - does not start with RMRK\");\n      if (exploded[1] != \"MINT\")\n        throw new Error(\"The op code needs to be MINT, is \" + exploded[1]);\n      if (exploded[2] != Collection.V) {\n        throw new Error(\n          `This remark was issued under version ${exploded[2]} instead of ${Collection.V}`\n        );\n      }\n      const data = decodeURIComponent(exploded[3]);\n      const obj = JSON.parse(data);\n      if (!obj) throw new Error(`Could not parse object from: ${data}`);\n      if (\n        undefined === obj.metadata ||\n        (!obj.metadata.startsWith(\"ipfs\") && !obj.metadata.startsWith(\"http\"))\n      )\n        throw new Error(`Invalid metadata - not an HTTP or IPFS URL`);\n      if (undefined === obj.name) throw new Error(`Missing field: name`);\n      if (undefined === obj.max) throw new Error(`Missing field: max`);\n      if (undefined === obj.issuer) throw new Error(`Missing field: issuer`);\n      if (undefined === obj.symbol) throw new Error(`Missing field: symbol`);\n      if (undefined === obj.id) throw new Error(`Missing field: id`);\n      return new this(\n        block,\n        obj.name,\n        obj.max,\n        obj.issuer,\n        obj.symbol,\n        obj.id,\n        obj.metadata\n      );\n    } catch (e) {\n      console.error(e.message);\n      console.log(`MINT error: full input was ${remark}`);\n      return e.message;\n    }\n  }\n\n  /**\n   * TBD - hard dependency on Axios / IPFS to fetch remote\n   */\n  private async load_metadata(): Promise<CollectionMetadata> {\n    if (this.loadedMetadata) return this.loadedMetadata;\n    return {} as CollectionMetadata;\n  }\n}\n\nexport interface CollectionMetadata {\n  description?: string;\n  attributes: Attribute[];\n  external_url?: string;\n  image?: string;\n  image_data?: string;\n}\n\nexport interface Attribute {\n  display_type: DisplayType;\n  trait_type: string;\n  value: number | string;\n}\n\nexport enum DisplayType {\n  null,\n  \"boost_number\",\n  \"number\",\n  \"boost_percentage\",\n}\n","// @todo add data field\nimport { Change } from \"../changelog\";\n\nexport class NFT {\n  readonly block: number;\n  readonly collection: string;\n  readonly name: string;\n  readonly instance: string;\n  readonly transferable: number;\n  readonly data?: string;\n  readonly sn: string;\n  readonly metadata?: string;\n  reactions: Reactionmap;\n  private changes: Change[] = [];\n  owner: string;\n  static V = \"RMRK1.0.0\";\n  loadedMetadata?: NFTMetadata;\n  constructor(\n    block: number,\n    collection: string,\n    name: string,\n    instance: string,\n    transferable: number,\n    sn: string,\n    metadata?: string,\n    data?: string\n  ) {\n    this.block = block;\n    this.collection = collection;\n    this.name = name;\n    this.instance = instance;\n    this.transferable = transferable;\n    this.sn = sn;\n    this.data = data;\n    this.metadata = metadata;\n    this.owner = \"\";\n    this.reactions = {};\n  }\n\n  public getId(): string {\n    if (!this.block)\n      throw new Error(\"This token is not minted, so it cannot have an ID.\");\n    return `${this.block}-${this.collection}-${this.instance}-${this.sn}`;\n  }\n\n  public addChange(c: Change): NFT {\n    this.changes.push(c);\n    return this;\n  }\n\n  public mintnft(): string {\n    if (this.block) {\n      throw new Error(\"An already existing NFT cannot be minted!\");\n    }\n    return `RMRK::MINTNFT::${NFT.V}::${encodeURIComponent(\n      JSON.stringify({\n        collection: this.collection,\n        name: this.name,\n        instance: this.instance,\n        transferable: this.transferable,\n        sn: this.sn,\n        metadata: this.metadata,\n      })\n    )}`;\n  }\n\n  public send(recipient: string): string {\n    if (!this.block) {\n      throw new Error(\n        `You can only send an existing NFT. If you just minted this, please load a new, \n        separate instance as the block number is an important part of an NFT's ID.`\n      );\n    }\n    return `RMRK::SEND::${NFT.V}::${this.getId()}::${recipient}`;\n  }\n\n  // @todo build this out, maybe data type?\n  static checkDataFormat(data: string): boolean {\n    return true;\n  }\n\n  static fromRemark(remark: string, block?: number): NFT | string {\n    if (!block) {\n      block = 0;\n    }\n    const exploded = remark.split(\"::\");\n    try {\n      if (exploded[0].toUpperCase() != \"RMRK\")\n        throw new Error(\"Invalid remark - does not start with RMRK\");\n      if (exploded[1] != \"MINTNFT\")\n        throw new Error(\"The op code needs to be MINTNFT, is \" + exploded[1]);\n      if (exploded[2] != NFT.V) {\n        throw new Error(\n          `This remark was issued under version ${exploded[2]} instead of ${NFT.V}`\n        );\n      }\n      const data = decodeURIComponent(exploded[3]);\n      const obj = JSON.parse(data);\n      if (!obj) throw new Error(`Could not parse object from: ${data}`);\n      // Check if the object has either data or metadata\n      if (\n        (undefined === obj.metadata ||\n          (!obj.metadata.startsWith(\"ipfs\") &&\n            !obj.metadata.startsWith(\"http\"))) &&\n        undefined === obj.data\n      )\n        throw new Error(\n          `Invalid metadata (not an HTTP or IPFS URL) and missing data`\n        );\n      if (obj.data) {\n        NFT.checkDataFormat(obj.data);\n      }\n      if (undefined === obj.name) throw new Error(`Missing field: name`);\n      if (undefined === obj.collection)\n        throw new Error(`Missing field: collection`);\n      if (undefined === obj.instance)\n        throw new Error(`Missing field: instance`);\n      if (undefined === obj.transferable)\n        throw new Error(`Missing field: transferable`);\n      if (undefined === obj.sn) throw new Error(`Missing field: sn`);\n      return new this(\n        block,\n        obj.collection,\n        obj.name,\n        obj.instance,\n        obj.transferable,\n        obj.sn,\n        obj.metadata,\n        obj.data\n      );\n    } catch (e) {\n      console.error(e.message);\n      console.log(`MINTNFT error: full input was ${remark}`);\n      return e.message;\n    }\n  }\n\n  /**\n   * @param price In plancks, so 10000000000 for 0.01 KSM. Set to 0 if canceling listing.\n   */\n  public list(price: number): string {\n    if (!this.block) {\n      throw new Error(\n        `You can only list an existing NFT. If you just minted this, please load a new, \n        separate instance as the block number is an important part of an NFT's ID.`\n      );\n    }\n    return `RMRK::LIST::${NFT.V}::${this.getId()}::${\n      price > 0 ? price : \"cancel\"\n    }`;\n  }\n\n  public buy(): string {\n    if (!this.block) {\n      throw new Error(\n        `You can only buy an existing NFT. If you just minted this, please load a new, \n        separate instance as the block number is an important part of an NFT's ID.`\n      );\n    }\n    return `RMRK::BUY::${NFT.V}::${this.getId()}`;\n  }\n\n  public consume(): string {\n    if (!this.block) {\n      throw new Error(\n        `You can only consume an existing NFT. If you just minted this, please load a new, \n        separate instance as the block number is an important part of an NFT's ID.`\n      );\n    }\n    return `RMRK::CONSUME::${NFT.V}::${this.getId()}`;\n  }\n\n  /**\n   * TBD - hard dependency on Axios / IPFS to fetch remote\n   */\n  private async load_metadata(): Promise<NFTMetadata> {\n    if (this.loadedMetadata) return this.loadedMetadata;\n    return {} as NFTMetadata;\n  }\n}\n\nexport interface NFTMetadata {\n  external_url?: string;\n  image?: string;\n  image_data?: string;\n  description?: string;\n  name?: string;\n  attributes: Attribute[];\n  background_color?: string;\n  animation_url?: string;\n  youtube_url?: string;\n}\n\nexport interface Attribute {\n  display_type: DisplayType;\n  trait_type: string;\n  value: number | string;\n}\n\nexport enum DisplayType {\n  null,\n  \"boost_number\",\n  \"number\",\n  \"boost_percentage\",\n}\n\nexport interface Reactionmap {\n  [unicode: string]: string[];\n}\n","// Copyright 2019-2021 @polkadot/extension-dapp authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function documentReadyPromise(creator) {\n  return new Promise(resolve => {\n    if (document.readyState === 'complete') {\n      resolve(creator());\n    } else {\n      window.addEventListener('load', () => resolve(creator()));\n    }\n  });\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class ChangeIssuer {\n  issuer: string;\n  id: string;\n  static V = \"RMRK1.0.0\";\n\n  constructor(issuer: string, id: string) {\n    this.issuer = issuer;\n    this.id = id;\n  }\n\n  static fromRemark(remark: string): ChangeIssuer | string {\n    const exploded = remark.split(\"::\");\n    try {\n      if (exploded[0] != \"RMRK\")\n        throw new Error(\"Invalid remark - does not start with RMRK\");\n      if (exploded[2] != ChangeIssuer.V)\n        throw new Error(\n          `Version mismatch. Is ${exploded[2]}, should be ${ChangeIssuer.V}`\n        );\n      if (exploded[1] != \"CHANGEISSUER\")\n        throw new Error(\n          \"The op code needs to be CHANGEISSUER, is \" + exploded[1]\n        );\n\n      if (undefined === exploded[3] || undefined == exploded[4]) {\n        throw new Error(\"Cound not find ID or new issuer\");\n      }\n    } catch (e) {\n      console.error(e.message);\n      console.log(`CHANGEISSUER error: full input was ${remark}`);\n      return e.message;\n    }\n    const ci = new ChangeIssuer(exploded[4], exploded[3]);\n    return ci;\n  }\n}\n","export class Send {\n  recipient: string;\n  id: string;\n  static V = \"RMRK1.0.0\";\n\n  constructor(id: string, recipient: string) {\n    this.recipient = recipient;\n    this.id = id;\n  }\n\n  static fromRemark(remark: string): Send | string {\n    const exploded = remark.split(\"::\");\n    try {\n      if (exploded[0] != \"RMRK\")\n        throw new Error(\"Invalid remark - does not start with RMRK\");\n      if (exploded[2] != Send.V)\n        throw new Error(\n          `Version mismatch. Is ${exploded[2]}, should be ${Send.V}`\n        );\n      if (exploded[1] != \"SEND\")\n        throw new Error(\"The op code needs to be SEND, is \" + exploded[1]);\n\n      if (undefined === exploded[3] || undefined == exploded[4]) {\n        throw new Error(\"Cound not find ID or recipient\");\n      }\n    } catch (e) {\n      console.error(e.message);\n      console.log(`SEND error: full input was ${remark}`);\n      return e.message;\n    }\n    return new Send(exploded[3], exploded[4]);\n  }\n}\n","export class Emote {\n  unicode: string;\n  id: string;\n  static V = \"RMRK1.0.0\";\n\n  constructor(id: string, unicode: string) {\n    this.unicode = unicode;\n    this.id = id;\n  }\n\n  static fromRemark(remark: string): Emote | string {\n    const exploded = remark.split(\"::\");\n    try {\n      if (exploded[0] != \"RMRK\")\n        throw new Error(\"Invalid remark - does not start with RMRK\");\n      if (exploded[2] != Emote.V)\n        throw new Error(\n          `Version mismatch. Is ${exploded[2]}, should be ${Emote.V}`\n        );\n      if (exploded[1] != \"EMOTE\")\n        throw new Error(\"The op code needs to be EMOTE, is \" + exploded[1]);\n\n      if (undefined === exploded[3] || undefined == exploded[4]) {\n        throw new Error(\"Cound not find ID or unicode\");\n      }\n    } catch (e) {\n      console.error(e.message);\n      console.log(`EMOTE error: full input was ${remark}`);\n      return e.message;\n    }\n    return new Emote(exploded[3], exploded[4]);\n  }\n}\n","import { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport { stringToHex } from \"@polkadot/util\";\nimport { URL } from \"url\";\n\nexport const getApi = async (wsEndpoint: string): Promise<ApiPromise> => {\n  const wsProvider = new WsProvider(wsEndpoint);\n  const api = ApiPromise.create({ provider: wsProvider });\n  return api;\n};\n\nexport const getLatestBlock = async (api: ApiPromise): Promise<number> => {\n  const header = await api.rpc.chain.getHeader();\n  return header.number.toNumber();\n};\n\nexport const getLatestFinalizedBlock = async (\n  api: ApiPromise\n): Promise<number> => {\n  const hash = await api.rpc.chain.getFinalizedHead();\n  const header = await api.rpc.chain.getHeader(hash);\n  if (header.number.toNumber() === 0) {\n    console.error(\"Unable to retrieve finalized head - returned genesis block\");\n    process.exit(1);\n  }\n  return header.number.toNumber();\n};\n\nexport const deeplog = function (obj: any): void {\n  console.log(JSON.stringify(obj, null, 2));\n};\n\nexport const stringIsAValidUrl = (s: string): boolean => {\n  try {\n    new URL(s);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const prefixToArray = function (prefix: string): string[] {\n  const returnArray = [];\n  const exploded = prefix.split(\",\");\n  for (const p of exploded) {\n    if (p.indexOf(\"0x\") === 0) {\n      returnArray.push(p);\n    } else {\n      returnArray.push(stringToHex(p));\n    }\n  }\n  return returnArray;\n};\n","export type Options = {\n  ws: string;\n  from: string;\n  to: string;\n  prefixes: string;\n  blocks: string;\n  json: string;\n  folder: string;\n  append: string;\n  remark: string;\n};\n\nexport type BlockCalls = {\n  block: number;\n  calls: BlockCall[];\n};\n\nexport type BlockCall = {\n  call: string;\n  value: string;\n  caller: string;\n};\n\nexport enum OP_TYPES {\n  BUY = \"BUY\",\n  LIST = \"LIST\",\n  MINT = \"MINT\",\n  MINTNFT = \"MINTNFT\",\n  SEND = \"SEND\",\n  EMOTE = \"EMOTE\",\n  CHANGEISSUER = \"CHANGEISSUER\",\n}\n","import * as util_crypto from \"@polkadot/util-crypto\";\nimport * as dappex from \"@polkadot/extension-dapp\";\nimport { Consolidator as consolidator } from \"./tools/consolidator/consolidator.js\";\nimport { Collection as c100 } from \"./rmrk1.0.0/classes/collection.js\";\n\nimport { NFT as n100 } from \"./rmrk1.0.0/classes/nft.js\";\n\nconst rmrk = {\n  consolidator: consolidator,\n};\n\nconst polkadot = {\n  util_crypto,\n  dappex,\n};\n\nexport { polkadot, rmrk, c100, n100 };\n","import JsonAdapter from \"./adapters/json\";\nimport { Collection as C100 } from \"../../rmrk1.0.0/classes/collection\";\nimport { NFT as N100 } from \"../../rmrk1.0.0/classes/nft\";\nimport { ChangeIssuer } from \"../../rmrk1.0.0/classes/changeissuer\";\nimport { Send } from \"../../rmrk1.0.0/classes/send\";\nimport { Emote } from \"../../rmrk1.0.0/classes/emote\";\nimport { Change } from \"../../rmrk1.0.0/changelog\";\nimport { deeplog } from \"../utils\";\nimport { decodeAddress } from \"@polkadot/keyring\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { Remark } from \"./remark\";\nimport { OP_TYPES } from \"../types\";\n// import * as fs from \"fs\";\n\nexport class Consolidator {\n  private adapter: JsonAdapter;\n  private invalidCalls: InvalidCall[];\n  private collections: C100[];\n  private nfts: N100[];\n  constructor(initializedAdapter: JsonAdapter) {\n    this.adapter = initializedAdapter;\n    this.invalidCalls = [];\n    this.collections = [];\n    this.nfts = [];\n  }\n  private findExistingCollection(id: string) {\n    return this.collections.find((el) => el.id === id);\n  }\n  private updateInvalidCalls(op_type: OP_TYPES, remark: Remark) {\n    const invalidCallBase: Partial<InvalidCall> = {\n      op_type,\n      block: remark.block,\n      caller: remark.caller,\n    };\n    return function update(\n      this: Consolidator,\n      object_id: string,\n      message: string\n    ) {\n      this.invalidCalls.push({\n        ...invalidCallBase,\n        object_id,\n        message,\n      } as InvalidCall);\n    };\n  }\n  private mint(remark: Remark): boolean {\n    // A new collection was created\n    console.log(\"Instantiating collection\");\n    const invalidate = this.updateInvalidCalls(OP_TYPES.MINT, remark).bind(\n      this\n    );\n    const c = C100.fromRemark(remark.remark, remark.block);\n\n    if (typeof c === \"string\") {\n      // console.log(\n      //   \"Collection was not instantiated OK from \" + remark.remark\n      // );\n      invalidate(\n        remark.remark,\n        `[${OP_TYPES.MINT}] Dead before instantiation: ${c}`\n      );\n      return true;\n    }\n\n    //console.log(\"Collection instantiated OK from \" + remark.remark);\n    const pubkey = decodeAddress(remark.caller);\n    const id = C100.generateId(u8aToHex(pubkey), c.symbol);\n\n    if (this.findExistingCollection(c.id)) {\n      invalidate(\n        c.id,\n        `[${OP_TYPES.MINT}] Attempt to mint already existing collection`\n      );\n      return true;\n    }\n\n    if (id.toLowerCase() !== c.id.toLowerCase()) {\n      invalidate(\n        c.id,\n        `Caller's pubkey ${u8aToHex(\n          pubkey\n        )} (${id}) does not match generated ID`\n      );\n      return true;\n    }\n\n    this.collections.push(c);\n    return false;\n  }\n\n  private mintNFT(remark: Remark): boolean {\n    // A new NFT was minted into a collection\n    console.log(\"Instantiating nft\");\n    const invalidate = this.updateInvalidCalls(OP_TYPES.MINTNFT, remark).bind(\n      this\n    );\n    const n = N100.fromRemark(remark.remark, remark.block);\n\n    if (typeof n === \"string\") {\n      invalidate(\n        remark.remark,\n        `[${OP_TYPES.MINTNFT}] Dead before instantiation: ${n}`\n      );\n      return true;\n    }\n\n    const nftParent = this.findExistingCollection(n.collection);\n    if (!nftParent) {\n      invalidate(\n        n.getId(),\n        `NFT referencing non-existant parent collection ${n.collection}`\n      );\n      return true;\n    }\n\n    n.owner = nftParent.issuer;\n    if (remark.caller != n.owner) {\n      invalidate(\n        n.getId(),\n        `Attempted issue of NFT in non-owned collection. Issuer: ${nftParent.issuer}, caller: ${remark.caller}`\n      );\n      return true;\n    }\n\n    const existsCheck = this.nfts.find((el) => {\n      const idExpand1 = el.getId().split(\"-\");\n      idExpand1.shift();\n      const uniquePart1 = idExpand1.join(\"-\");\n\n      const idExpand2 = n.getId().split(\"-\");\n      idExpand2.shift();\n      const uniquePart2 = idExpand2.join(\"-\");\n\n      return uniquePart1 === uniquePart2;\n    });\n\n    if (existsCheck) {\n      invalidate(\n        n.getId(),\n        `[${OP_TYPES.MINTNFT}] Attempt to mint already existing NFT`\n      );\n      return true;\n    }\n    if (n.owner === \"\") {\n      invalidate(\n        n.getId(),\n        `[${OP_TYPES.MINTNFT}] Somehow this NFT still doesn't have an owner.`\n      );\n      return true;\n    }\n    this.nfts.push(n);\n    return false;\n  }\n\n  private send(remark: Remark): boolean {\n    // An NFT was sent to a new owner\n    console.log(\"Instantiating send\");\n    const send = Send.fromRemark(remark.remark);\n    const invalidate = this.updateInvalidCalls(OP_TYPES.SEND, remark).bind(\n      this\n    );\n    if (typeof send === \"string\") {\n      invalidate(\n        remark.remark,\n        `[${OP_TYPES.SEND}] Dead before instantiation: ${send}`\n      );\n      return true;\n    }\n\n    const nft = this.nfts.find((el) => {\n      const idExpand1 = el.getId().split(\"-\");\n      idExpand1.shift();\n      const uniquePart1 = idExpand1.join(\"-\");\n\n      const idExpand2 = send.id.split(\"-\");\n      idExpand2.shift();\n      const uniquePart2 = idExpand2.join(\"-\");\n\n      return uniquePart1 === uniquePart2;\n    });\n\n    // @todo add condition for transferable!\n\n    if (!nft) {\n      invalidate(\n        send.id,\n        `[${OP_TYPES.SEND}] Attempting to send non-existant NFT ${send.id}`\n      );\n      return true;\n    }\n\n    // Check if allowed to issue send - if owner == caller\n    if (nft.owner != remark.caller) {\n      invalidate(\n        send.id,\n        `[${OP_TYPES.SEND}] Attempting to send non-owned NFT ${send.id}, real owner: ${nft.owner}`\n      );\n      return true;\n    }\n\n    nft.addChange({\n      field: \"owner\",\n      old: nft.owner,\n      new: send.recipient,\n      caller: remark.caller,\n      block: remark.block,\n    } as Change);\n\n    nft.owner = send.recipient;\n    return false;\n  }\n\n  private emote(remark: Remark): boolean {\n    // An EMOTE reaction has been sent\n    console.log(\"Instantiating emote\");\n    const emote = Emote.fromRemark(remark.remark);\n    const invalidate = this.updateInvalidCalls(OP_TYPES.EMOTE, remark).bind(\n      this\n    );\n    if (typeof emote === \"string\") {\n      invalidate(\n        remark.remark,\n        `[${OP_TYPES.EMOTE}] Dead before instantiation: ${emote}`\n      );\n      return true;\n    }\n    const target = this.nfts.find((el) => el.getId() === emote.id);\n    if (!target) {\n      invalidate(\n        emote.id,\n        `[${OP_TYPES.EMOTE}] Attempting to emote on non-existant NFT ${emote.id}`\n      );\n      return true;\n    }\n    const index = target.reactions[emote.unicode].indexOf(remark.caller, 0);\n    if (index > -1) {\n      target.reactions[emote.unicode].splice(index, 1);\n    } else {\n      target.reactions[emote.unicode].push(remark.caller);\n    }\n    return false;\n  }\n\n  private changeIssuer(remark: Remark): boolean {\n    // The ownership of a collection has changed\n    console.log(\"Instantiating an issuer change\");\n    const ci = ChangeIssuer.fromRemark(remark.remark);\n    const invalidate = this.updateInvalidCalls(\n      OP_TYPES.CHANGEISSUER,\n      remark\n    ).bind(this);\n    if (typeof ci === \"string\") {\n      // console.log(\n      //   \"ChangeIssuer was not instantiated OK from \" + remark.remark\n      // );\n      invalidate(\n        remark.remark,\n        `[${OP_TYPES.CHANGEISSUER}] Dead before instantiation: ${ci}`\n      );\n      return true;\n    }\n    const coll = this.collections.find((el: C100) => el.id === ci.id);\n    if (!coll) {\n      invalidate(\n        ci.id,\n        `This ${OP_TYPES.CHANGEISSUER} remark is invalid - no such collection with ID ${ci.id} found before block ${remark.block}!`\n      );\n      return true;\n    }\n\n    if (remark.caller != coll.issuer) {\n      invalidate(\n        ci.id,\n        `Attempting to change issuer of collection ${ci.id} when not issuer!`\n      );\n      return true;\n    }\n\n    coll.addChange({\n      field: \"issuer\",\n      old: coll.issuer,\n      new: ci.issuer,\n      caller: remark.caller,\n      block: remark.block,\n    } as Change);\n\n    coll.issuer = ci.issuer;\n    return false;\n  }\n\n  public consolidate(): void {\n    const remarks = this.adapter.getRemarks();\n    //console.log(remarks);\n    for (const remark of remarks) {\n      console.log(\"==============================\");\n      console.log(\"Remark is: \" + remark.remark);\n      switch (remark.interaction_type) {\n        case OP_TYPES.MINT:\n          if (this.mint(remark)) {\n            continue;\n          }\n          break;\n\n        case OP_TYPES.MINTNFT:\n          if (this.mintNFT(remark)) {\n            continue;\n          }\n          break;\n\n        case OP_TYPES.SEND:\n          if (this.send(remark)) {\n            continue;\n          }\n          break;\n\n        case OP_TYPES.BUY:\n          // An NFT was bought after being LISTed\n          break;\n\n        case OP_TYPES.LIST:\n          // An NFT was listed for sale\n          break;\n\n        case OP_TYPES.EMOTE:\n          if (this.emote(remark)) {\n            continue;\n          }\n          break;\n\n        case OP_TYPES.CHANGEISSUER:\n          if (this.changeIssuer(remark)) {\n            continue;\n          }\n          break;\n\n        default:\n          console.error(\n            \"Unable to process this remark - wrong type: \" +\n              remark.interaction_type\n          );\n      }\n    }\n    deeplog(this.nfts);\n    deeplog(this.collections);\n    console.log(this.invalidCalls);\n  }\n}\n\ntype InvalidCall = {\n  message: string;\n  caller: string;\n  block: number;\n  object_id: string;\n  op_type: string;\n};\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","win","window","web3IsInjected","injectedWeb3","throwError","method","Error","mapAccounts","list","ss58Format","map","address","genesisHash","name","encodeAddress","decodeAddress","meta","isWeb3Injected","web3EnablePromise","async","web3Accounts","accounts","injected","Promise","all","get","error","result","addresses","console","log","join","web3FromSource","sources","found","find","DisplayType","originName","creator","entries","enable","version","resolve","catch","message","getWindowExtensions","then","values","info","ext","subscribe","cb","names","document","readyState","addEventListener","unsubs","reduce","unsub","accountU8a","account","u8aEq","provider","listProviders","warn","startProvider","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","Collection","[object Object]","block","max","issuer","symbol","id","metadata","this","V","encodeURIComponent","JSON","stringify","toUpperCase","c","changes","pubkey","startsWith","substr","substring","remark","exploded","split","data","decodeURIComponent","parse","undefined","loadedMetadata","NFT","collection","instance","transferable","sn","owner","reactions","recipient","getId","checkDataFormat","price","ChangeIssuer","Send","Emote","unicode","deeplog","OP_TYPES","rmrk","consolidator","initializedAdapter","adapter","invalidCalls","collections","nfts","el","op_type","invalidCallBase","caller","object_id","invalidate","updateInvalidCalls","MINT","bind","C100","fromRemark","generateId","u8aToHex","findExistingCollection","toLowerCase","MINTNFT","n","N100","nftParent","idExpand1","shift","uniquePart1","idExpand2","send","SEND","nft","addChange","field","old","new","emote","EMOTE","index","indexOf","splice","ci","CHANGEISSUER","coll","remarks","getRemarks","interaction_type","mint","mintNFT","BUY","LIST","changeIssuer","polkadot","util_crypto","dappex"],"mappings":"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"}